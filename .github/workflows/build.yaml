name: 'Build Linux x86_64 and aarch64'

on:
  push:

jobs:
  build-linux-x86-64:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: 'true'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build Docker image for x86_64
      run: docker build -t build-linux-x86-64 .

    - name: Run Docker container with volume mount
      run: docker run -v ${{ github.workspace }}/:/mnt/src build-linux-x86-64
    
    - name: Rename output binary
      run: mkdir ${{ github.workspace }}/build && sudo mv ${{ github.workspace }}/target/x86_64-unknown-linux-gnu/release/minit ${{ github.workspace }}/build/minit-x86_64
    - name: upload linux artifact
      uses: actions/upload-artifact@v2
      with:
        name: uploads
        path: ${{ github.workspace }}/build/minit-x86_64
        if-no-files-found: error
  
  build-linux-aarch64:
    runs-on: macos-14

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: 'true'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build Docker image for aarch64
      run: docker build -t build-linux-aarch64 .

    - name: Run Docker container with volume mount
      run: docker run -v ${{ github.workspace }}/:/mnt/src build-linux-aarch64 RUSTFLAGS="-C target-feature=+crt-static" cargo build --target aarch64-unknown-linux-gnu --release
    
    - name: Rename output binary
      run: mkdir ${{ github.workspace }}/build && sudo mv ${{ github.workspace }}/target/aarch64-unknown-linux-gnu/release/minit ${{ github.workspace }}/build/minit-aarch64
    - name: upload linux artifact
      uses: actions/upload-artifact@v2
      with:
        name: uploads
        path: ${{ github.workspace }}/build/minit-aarch64
        if-no-files-found: error
  
  upload-release:

    runs-on: ubuntu-latest
    needs: [
      build-linux-x86-64,
      build-linux-aarch64,
    ]

    steps:
    - uses: actions/checkout@v2
    - name: create release
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: 0.1.0
        release_name: Release 0.1.0
        draft: false
        prerelease: false   
    - name: download artifacts
      uses: actions/download-artifact@v2
      with:
        name: uploads
        path: ${{ github.workspace }}/uploads
    - name: upload linux x86-64
      id: upload-linux-x86-64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/uploads/minit-x86_64
        asset_name: minit-x86_64
        asset_content_type: application/octet-stream
    - name: upload linux aarch64
      id: upload-linux-aarch64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/uploads/minit-aarch64
        asset_name: minit-aarch64
        asset_content_type: application/octet-stream